% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{cache}
\alias{cache}
\title{Cache a function call}
\usage{
cache(input, cache_dir = getOption("cache_dir"))
}
\arguments{
\item{input}{expression of the form g <- f()}

\item{cache_dir}{directory which the cached files should be saved in}
}
\description{
Provides a convinient method to cache the results of slowing running
functions. \code{cache} will detect if the inputs to a function or the
function itself changes and will automatically rerun the function and
re-cache in this instance.
}
\details{
The function itself it's arguments are parsed from the function
call and run using rlang. The results are cached and compared to the parmeters
each time the function is run. The caching using savind in external rds files.
In the cache directory each cache will have a subdirectory named 'g' (the name)
of the object being assigned to. In this subdirectory will be two files:
'call.rds' which contains the function and parameters and 'object.rds' which
contains the object created by the slow running computation.
}
\examples{
\dontrun{
# define a 'slow running' function with external parameters
N <- 100
K <- 42
simulate <- function(n, k){
  Sys.sleep(10)
  rnorm(n) + k
}

# the results of this function will be cached
# the function will only be run:
# 1. the first time the function is run
# 2. if the parameters (N, K) are changed and the function is rerun

cache(x <- simulate(N, K))
}
}
